// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    RAM64(in=in, load=l0, out=ro0, address=address[3..8]);
    RAM64(in=in, load=l1, out=ro1, address=address[3..8]);
    RAM64(in=in, load=l2, out=ro2, address=address[3..8]);
    RAM64(in=in, load=l3, out=ro3, address=address[3..8]);
    RAM64(in=in, load=l4, out=ro4, address=address[3..8]);
    RAM64(in=in, load=l5, out=ro5, address=address[3..8]);
    RAM64(in=in, load=l6, out=ro6, address=address[3..8]);
    RAM64(in=in, load=l7, out=ro7, address=address[3..8]);

    Mux8Way16(a=ro0, b=ro1, c=ro2, d=ro3, 
              e=ro4, f=ro5, g=ro6, h=ro7,
              sel=address[0..2], out=out);

    DMux8Way(a=l0, b=l1, c=l2, d=l3,
            e=l4, f=l5, g=l6, h=l7,
            sel=address[0..2], in=load);


}